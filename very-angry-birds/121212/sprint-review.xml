<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="../deck/slides.xsl"?>
<slides>
	<dependencies>
		<script src="http://openlayers.org/api/OpenLayers.js"></script>
		<style>
			/* Override deck.js styles. */
			#mnr-demo-map { 
				width: 800px;
				height: 600px;
			}
			#mnr-demo-map.fullScreen { 
				width: 100% !important;
				height: 100% !important;
			}
			#mnr-demo-map a { 
				color: #EEEEEE;
			}
			#mnr-demo-map div {
				font-size: 16px;
			}
			#mnr-demo-map img { 
				max-width: none;
				max-height: none;
				line-height: 0px;
				margin: 0px;
				padding: 0px;
				border: 0px;
			}
			.mnr-table {
				font-size: 16px !important;
			}

			.mnr-table tr > td {
				padding-bottom: 16px !important;
			}

			.have {
				color: green;
			}

			.kinda-have {
				color: orange;
			}

			.dont-have {
				color: red;
			}
		</style>
	</dependencies>

	<title>Sprint review Very Angry Birds</title>

	<slide>
		<header>
			<h3>Sprint goal</h3>
				</header>
			<blockquote>
				<p>"Deliver a first draft of the Multinet-R product sample to <b>Apple</b> and <b>Mapscape</b> by the end of 2012."</p>
				<p><cite style="float: right">Our product owner</cite></p>
			</blockquote>
	</slide>

	<slide id="teams">
		<header>
			<h3>User Stories</h3>
		</header>
		<p>The sprint started on the <strong>12th of December</strong> and ended on the <strong>2nd of January 2013</strong>.</p>
		<ul class="stories">
			<li class="story done">Support super-enumerations in physical models <span class="sp">(2 SP)</span></li>
			<li class="story done">Link network layer with hierarchical index structure. <span class="sp">(1 SP)</span></li>
			<li class="story done">Develop minimal loader software to guarantee integrity <span class="sp">(3 SP)</span></li>
			<li class="story done">Fix any problems found by loading the data <span class="sp">(1 SP)</span></li>
			<li class="story done">Generate the the pilot data package to be delivered to customers. <span class="sp">(1 SP)</span></li>
		</ul>
		<div class="info">
			<p class="scrum-master"><span class="caption">Product owner: </span><span class="content">Timothy Grymonpon</span></p>
			<p class="scrum-master"><span class="caption">Scrum master: </span><span class="content">Johan Tré</span></p>
			<p class="team"><span class="caption">Team:</span> <span class="content">Christophe, Dominique, Elke, Peter, Pieter, Rebekka</span></p>
		</div>
	</slide>

	<slide>
		<header>
			<h3>Multinet-R process overview</h3>
		</header>
		<img src="img/overview.jpg" />
	</slide>

	<slide>
		<header>
			<h3>Multinet-R - Features we have</h3>
		</header>
			<div style="float: left; clear: none">
				<ul>
					<li>Junctions</li>
					<li>Road and ferries</li>
					<li>Admin hierarchy</li>
					<li>(Most) Restrictions</li>
					<li>Traffic Signs</li>
					<li>Maneuvers (uncommitted)</li>
				</ul>
			</div>
			<div style="float: right; clear: none">
				<img src ="img/mnr-d64.jpeg" alt="D64" width="350px" height="350px" />
			</div>
	</slide>

	<slide>
		<header>
			<h3>Multinet-R - Features to be done</h3>
		</header>
			<ul>
				<li>Anchor Points</li>
				<li>POIs</li>
				<li>Railways</li>
				<li>Topology</li>
				<li>Intersections and freeways</li>
				<li>RDS/TMC</li>
				<li>Housenumbers</li>
				<li>Timedomains</li>
				<li>Meta information</li>
				<li>A lot more...</li>
			</ul>
			<p>
				For more detail go to <a href="http://vos.intra.local/display/CPEMPE/Multinet-R+Status">this page</a>.
			</p>
	</slide>

	<slide>
		<header>
			<h3>Multinet-R - Concepts status (part 1)</h3>
		</header>

		<div class="slide">
			<h5 class="dont-have">Optimized load process for multiple RDBMSes</h5>
			<ul>
				<li>Current status: Not optimized Postgres-only load.</li>
				<li>Long term goal: Optimized + support for other RDBMSes (Oracle)</li>
			</ul>
		</div>

		<div class="slide">
			<h5 class="kinda-have">Integrated content</h5>
			<ul>
				<li>Zone-inputformat takes care of merging data from different sources.</li>
				<li>Retrieve data from MDS.</li>
				<li>MDS lacks data integration (POI, 2D City maps, Voicemaps).</li>
			</ul>
		</div>

		<div class="slide">
			<h5 class="kinda-have">Continental layer</h5>
			<ul>
				<li>Partially solved by 'zones'. Except for duplicate features on dataset borders.</li>
				<li>Retrieve continental data from MDS.</li>
				<li>MDS is not yet continental.</li>
			</ul>
		</div>

		<div class="slide">
			<h5 class="kinda-have">Stable IDs</h5>
			<ul>
				<li>MNR Feature == TTOM Feature, MNR ID == TTOM ID (1 on 1 mapping)</li>
				<li>Have stable IDs for everything.</li>
				<li>Problems on dataset crossing because of different IDs.</li>
			</ul>
		</div>
	</slide>

	<slide>
		<header>
			<h3>Multinet-R - Concepts status (part 2)</h3>
		</header>

		<div class="slide">
			<h5 class="dont-have">Integrated meta-information</h5>
			<ul>
				<li>Not implemented yet.</li>
				<li>Populate meta tables: data (country specifics), model (format and conceptual model), product (stats).</li>
			</ul>
		</div>

		<div class="slide">
			<h5 class="dont-have">API</h5>
			<ul>
				<li>Not implemented</li>
				<li>Implement API that support backwards-compatible data loading.</li>
				<li>Requirements not clear yet.</li>
			</ul>
		</div>

		<div class="slide">
			<h5 class="have">Data model optimisations</h5>
			<ul>
				<li>Delivered according to specification.</li>
			</ul>
		</div>

		<div class="slide">
			<h5 class="kinda-have">Machine readable spec</h5>
			<ul>
				<li>XML delivered instead of population MNR meta tables.</li>
				<li>Populate meta tables.</li>
				<li>See next slide...</li>
			</ul>
		</div>
	</slide>

	<slide>
		<header>
			<h3>Multinet-R - Machine Readable spec status</h3>
		</header>
		<img src="img/mrs.png" />
	</slide>

<slide>
		<header>
			<h3>Multinet-R demo</h3>
		</header>
			<div>
				 <div id="mnr-demo-map"></div>
			</div>
				<p> </p>
				<p>
				 	<a href="javascript:$('#mnr-demo-map').fullScreen();" style="font-size: 14px">Go fullscreen</a>
				</p>
	</slide>

	<slide>
		<header>
			<h2>Multinet-R - Delivery content</h2>
		</header>
			<div style="float: left; clear: none;">
				<ul>
					<li>UC3 and D64 data (TSV, file per table)</li>
					<li>
						<p>Model</p>
						<ul>
							<li>Product data specification (contains UML)</li>
							<li>Product format specification (datatypes)</li>
							<li>Physical model xml ('multinet-r-1.2.0.xml')</li>
						</ul>
					</li>
					<li>Schema (PostGIS import scripts)</li>
					<li>Statistics (per feature type)</li>
					<li><a href="file:///share/peg/workspace/multinet-r/release-notes.html" target="_blank">Release notes</a></li>
				</ul>
			</div>
			<div style="float: right; clear: none;">
				<img src="img/delivery.png" />
			</div>
	</slide>



	<initscript>
		<script type="text/javascript">
			var $d = $(document);
			$d.bind('deck.init',
						function() {
						 	var map = new OpenLayers.Map('mnr-demo-map', {
								projection: new OpenLayers.Projection("EPSG:900913"),
								displayProjection: new OpenLayers.Projection("EPSG:4326"),
								units: 'm'
						 	});

						 	var lbs = new OpenLayers.Layer.XYZ("TomTom Sydney LBS",
										["http://a.routes.tomtom.com/lbs/map/1/basic/${z}/${x}/${y}/1e2099c7-eea9-476b-aac9-b20dc7100af1;v=3;l=nl;m=png"],
										{
											layers:'basic'
										},
										{
											numZoomLevels: 17
										}
							);

						 	var uc3_nw = new OpenLayers.Layer.WMS(
			                    "MNR Network", "http://bekka-desktop:8080/geoserver/mnr/wms",
			                    {
			                        layers: 'mnr:MNR_View_Network',
			                        srs: 'EPSG:4326',
			                        styles: '',
        							tiled: true,
        							transparent: true,
        							format: "image/png",
        							tilesOrigin : map.maxExtent.left + ',' + map.maxExtent.bottom,
        							displayInLayerSwitcher: true
			                    },
			                    {
			                    	buffer: 0,
									displayOutsideMaxExtent: false,
                        			isBaseLayer: false,
                        			yx : {'EPSG:4326' : true}
			                    }
			                );


						 	var uc3_hi = new OpenLayers.Layer.WMS(
			                    "MNR Hierarchy", "http://bekka-desktop:8080/geoserver/mnr/wms",
			                    {
			                        layers: 'mnr:MNR_View_Hierarchy',
			                        srs: 'EPSG:4326',
			                        styles: '',
        							tiled: true,
        							transparent: true,
        							format: "image/png",
        							tilesOrigin : map.maxExtent.left + ',' + map.maxExtent.bottom,
        							displayInLayerSwitcher: true
			                    },
			                    {
			                    	buffer: 0,
									displayOutsideMaxExtent: false,
                        			isBaseLayer: false,
                        			yx : {'EPSG:4326' : true}
			                    }
			                );

			                var uc3_mn = new OpenLayers.Layer.WMS(
			                    "MNR Maneuver", "http://bekka-desktop:8080/geoserver/mnr/wms",
			                    {
			                        layers: 'mnr:MNR_View_Maneuver',
			                        srs: 'EPSG:4326',
			                        styles: '',
        							tiled: true,
        							transparent: true,
        							format: "image/png",
        							tilesOrigin : map.maxExtent.left + ',' + map.maxExtent.bottom,
        							displayInLayerSwitcher: true
			                    },
			                    {
			                    	buffer: 0,
									displayOutsideMaxExtent: false,
									visibility: false,
                        			isBaseLayer: false,
                        			yx : {'EPSG:4326' : true}
			                    }
			                );

							map.addLayer(lbs);
							map.addLayer(uc3_nw);
							map.addLayer(uc3_mn);
							map.addLayer(uc3_hi);

							/* Note: beware of same-origin-policy. */
					        info = new OpenLayers.Control.WMSGetFeatureInfo({
					            url: 'http://bekka-desktop:8080/geoserver/mnr/wms', 
					            title: 'Identify features by clicking',
					            queryVisible: true,
					            eventListeners: {
					                getfeatureinfo: function(event) {
					                    map.addPopup(new OpenLayers.Popup.FramedCloud(
					                        "chicken", 
					                        map.getLonLatFromPixel(event.xy),
					                        null,
					                        event.text,
					                        null,
					                        true
					                    ));
					                }
					            }
					        });
					        
							var mousePositionCtrl = new OpenLayers.Control.MousePosition();

					        map.addControl(new OpenLayers.Control.LayerSwitcher());
					        map.addControl(info);
					        map.addControl(mousePositionCtrl);
					        info.activate();

							var lonlat = new OpenLayers.LonLat(-122.25320, 37.66681);
							lonlat.transform( new OpenLayers.Projection("EPSG:4326"), map.getProjectionObject() );
							map.setCenter(lonlat, 10);
			});
		</script>
	</initscript>
</slides>
